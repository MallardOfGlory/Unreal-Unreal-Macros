Begin Object Class=/Script/NiagaraEditor.NiagaraClipboardContent Name="NiagaraClipboardContent_0"
   Begin Object Class=/Script/NiagaraEditor.NiagaraScriptVariable Name="NiagaraScriptVariable_0"
   End Object
   Begin Object Class=/Script/NiagaraEditor.NiagaraScriptVariable Name="NiagaraScriptVariable_6"
   End Object
   Begin Object Class=/Script/NiagaraEditor.NiagaraScriptVariable Name="NiagaraScriptVariable_4"
   End Object
   Begin Object Class=/Script/NiagaraEditor.NiagaraScriptVariable Name="NiagaraScriptVariable_2"
   End Object
   Begin Object Name="NiagaraScriptVariable_0"
      Variable=(Name="Module.New Audio Spectrum",TypeDefHandle=(RegisteredTypeIndex=17))
      Metadata=(VariableGuid=9FE0CB754390DC3C320FE8B8258FB8F4)
      ChangeId=6F858E6749A24644CBD9F79FE172E5C4
   End Object
   Begin Object Name="NiagaraScriptVariable_6"
      Variable=(VarData=(0,0,0,0),Name="Particles.NormalizedAge",TypeDefHandle=(RegisteredTypeIndex=70))
      Metadata=(Description=NSLOCTEXT("", "AAF8B08F46862195289405B0BD5759BA", "The age in seconds divided by lifetime in seconds. Useful for animation as the value is between 0 and 1."),VariableGuid=BB23987142A1A7299DB64095CAF08772)
      DefaultValueVariant=(Bytes=(0,0,0,0),CurrentMode=Bytes)
      bSubscribedToParameterDefinitions=True
      ChangeId=92344CE6428C0E9A86DD6A9FB999747C
   End Object
   Begin Object Name="NiagaraScriptVariable_4"
      Variable=(VarData=(0,0,0,0,0,0,0,0,0,0,0,0),Name="Particles.Velocity",TypeDefHandle=(RegisteredTypeIndex=75))
      Metadata=(Description=NSLOCTEXT("", "41AF3FCB4EC2369F0BF21AB5FD536D62", "The velocity in cm/s of the particle."),VariableGuid=D6EBA2EA45E29195472549B9CC48354A)
      DefaultValueVariant=(Bytes=(0,0,0,0,0,0,0,0,0,0,0,0),CurrentMode=Bytes)
      bSubscribedToParameterDefinitions=True
      ChangeId=C8B7A9344FB5D0BF46EC0886D54B0617
   End Object
   Begin Object Name="NiagaraScriptVariable_2"
      Variable=(VarData=(0,0,0,0),Name="Module.Intensity",TypeDefHandle=(RegisteredTypeIndex=70))
      Metadata=(VariableGuid=FCE95DAF43F230A96AD83AB000579B4C)
      DefaultValueVariant=(Bytes=(0,0,0,0),CurrentMode=Bytes)
      ChangeId=26B7D41A457C709320306AAF4F3909BA
   End Object
   ScriptVariables(0)=(ScriptVariable=NiagaraScriptVariable'"NiagaraScriptVariable_0"',OriginalChangeId=6F858E6749A24644CBD9F79FE172E5C4)
   ScriptVariables(1)=(ScriptVariable=NiagaraScriptVariable'"NiagaraScriptVariable_6"',OriginalChangeId=92344CE6428C0E9A86DD6A9FB999747C)
   ScriptVariables(2)=(ScriptVariable=NiagaraScriptVariable'"NiagaraScriptVariable_4"',OriginalChangeId=C8B7A9344FB5D0BF46EC0886D54B0617)
   ScriptVariables(3)=(ScriptVariable=NiagaraScriptVariable'"NiagaraScriptVariable_2"',OriginalChangeId=26B7D41A457C709320306AAF4F3909BA)
   ExportedNodes=""
End Object
